{"version":3,"sources":["components/header/Header.js","components/articleNrConverter/ArtNrConverter.js","components/splits/ExcelFile.js","components/splits/Splits.js","components/v2productgenerator/generateXML.js","components/v2productgenerator/V2ProductGenerator.js","components/v4productgenerator/generateXML.js","components/v4productgenerator/V4ProductGenerator.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","react_router_dom","activeClassName","to","Component","artNrConv","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleFileChosen","e","setState","showUploadSpinner","f","target","files","reader","FileReader","str","onload","_ref","asyncToGenerator","regenerator_default","mark","_callee2","data","workbook","wrap","_context2","prev","next","Uint8Array","result","XLSX","read","type","keys","Sheets","forEach","sheet","_ref2","_callee","row","_context","includes","v","concat","stop","_x2","apply","arguments","links","convertToId","state","_x","readAsArrayBuffer","ids","nrOfIds","inputHandler","bind","assertThisInitialized","getExcel","value","_this2","splitText","split","nrOfNrs","fullStr","element","sStr","splitString","setIds","lastStr","length","substr","preventDefault","filename","Date","toLocaleString","push","wb","utils","book_new","ws","aoa_to_sheet","book_append_sheet","writeFile","htmlFor","id","lib_default","rows","maxRows","name","placeholder","onChange","onKeyUp","href","style","display","onClick","readOnly","ExcelFile","downloadFile","index","d","parseInt","src","alt","calcIds","toString","generateExcelData","i","Math","ceil","slice","getGeneratorData","_this$setState","defineProperty","map","file","splits_ExcelFile","generateProductStatuses","generateSalesChannel","price","random","salesPrice","generateRandomFreightClass","freightClasses","floor","max","generateKeys","generateXML","products","undefined","prefix","variations","xml","toISOString","toLowerCase","j","xmlFormatter","V2ProductGenerator","useVariations","generateFile","Blob","url","window","URL","createObjectURL","document","body","append","download","click","remove","revokeObjectURL","handleChange","min","checked","for","generateProduct","generatePrice","generateAvailability","generateMedia","V4ProductGenerator","productXML","priceXML","availabilityXML","mediaXML","App","header_Header","react_router","exact","path","render","ArtNrConverter","component","Splits","V2ProductGenerator_V2ProductGenerator","V4ProductGenerator_V4ProductGenerator","Boolean","location","hostname","match","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dc350db5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h4 className=\"text-center pt-4 font-weight-bold\">CDON.COM</h4>\r\n        <p className=\"text-center pb-2 font-italic\">Tools</p>\r\n        <ul className=\"nav nav-tabs justify-content-center\">\r\n          <li className=\"nav-item\">\r\n            <NavLink\r\n              className=\"nav-link\"\r\n              activeClassName=\"active\"\r\n              to=\"/generator\"\r\n            >\r\n              Article Number generator\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/split\">\r\n              File splitter\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink\r\n              className=\"nav-link\"\r\n              activeClassName=\"active\"\r\n              to=\"/v2-product-generator\"\r\n            >\r\n              V2 Product\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink\r\n              className=\"nav-link\"\r\n              activeClassName=\"active\"\r\n              to=\"/v4-product-generator\"\r\n            >\r\n              V4 Product\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport TextareaAutosize from 'react-autosize-textarea';\r\nimport XLSX from 'xlsx';\r\n\r\nclass artNrConv extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      links: '',\r\n      ids: this.props.ids,\r\n      nrOfIds: 0,\r\n      showUploadSpinner: false\r\n    };\r\n    this.inputHandler = this.inputHandler.bind(this);\r\n    this.getExcel = this.getExcel.bind(this);\r\n  }\r\n  inputHandler(e) {\r\n    this.setState({ links: e.target.value });\r\n    this.convertToId(this.state.links);\r\n  }\r\n  convertToId(str) {\r\n    let splitText = str.split(/\\r?\\n/);\r\n    let nrOfNrs = 0;\r\n    let fullStr = 'ProductId\\n';\r\n    splitText.forEach(element => {\r\n      if (element.includes('http')) {\r\n        nrOfNrs++;\r\n        var sStr = this.splitString(element);\r\n        if (sStr) {\r\n          fullStr += sStr + '\\n';\r\n        }\r\n      }\r\n    });\r\n    this.setState({ ids: fullStr, nrOfIds: nrOfNrs });\r\n    this.props.setIds(fullStr);\r\n  }\r\n  splitString(str) {\r\n    if (str.split('-')[0] !== str) {\r\n      let split = str.split('-');\r\n      let lastStr = split[split.length - 1];\r\n      let fixedStr;\r\n      if (lastStr[0] === 'p') {\r\n        fixedStr = lastStr.substr(1);\r\n      } else if (split[split.length - 2][0] === 'p') {\r\n        fixedStr = split[split.length - 2].substr(1);\r\n      } else {\r\n        fixedStr = split[split.length - 1];\r\n      }\r\n      return fixedStr;\r\n    }\r\n  }\r\n  getExcel(e) {\r\n    e.preventDefault();\r\n    /* original data */\r\n    var filename = `delete${new Date().toLocaleString()}.xlsx`;\r\n    var data = [];\r\n    this.state.ids.split(/\\r?\\n/).forEach(element => {\r\n      data.push([element]);\r\n    });\r\n    var ws_name = 'SheetJS';\r\n\r\n    //if(typeof console !== 'undefined') console.log(new Date());\r\n    var wb = XLSX.utils.book_new(),\r\n      ws = XLSX.utils.aoa_to_sheet(data);\r\n\r\n    /* add worksheet to workbook */\r\n    XLSX.utils.book_append_sheet(wb, ws, ws_name);\r\n\r\n    /* write workbook */\r\n    //if(typeof console !== 'undefined') console.log(new Date());\r\n    XLSX.writeFile(wb, filename);\r\n    //if(typeof console !== 'undefined') console.log(new Date());\r\n  }\r\n  handleFileChosen = e => {\r\n    this.setState({ showUploadSpinner: true });\r\n    var files = e.target.files,\r\n      f = files[0];\r\n    var reader = new FileReader();\r\n    var str = '';\r\n    reader.onload = async e => {\r\n      var data = new Uint8Array(e.target.result);\r\n      var workbook = XLSX.read(data, { type: 'array' });\r\n      Object.keys(workbook.Sheets).forEach(sheet => {\r\n        Object.keys(workbook.Sheets[sheet]).forEach(async row => {\r\n          //console.log(row, workbook.Sheets[sheet][row]);\r\n          if (!row.includes('!')) {\r\n            if (\r\n              typeof workbook.Sheets[sheet][row].v == 'number' &&\r\n              !str.includes(workbook.Sheets[sheet][row].v)\r\n            ) {\r\n              str += `https://cdon.com/excel/upload/p-${workbook.Sheets[sheet][row].v} \\n`;\r\n            }\r\n          }\r\n        });\r\n      });\r\n      await this.setState({ links: str });\r\n      await this.convertToId(this.state.links);\r\n      this.setState({ showUploadSpinner: false });\r\n    };\r\n    reader.readAsArrayBuffer(f);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container mt-4\">\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"links\" className=\"font-weight-bold\">\r\n                Links{' '}\r\n                <span className=\"badge badge-primary\" id=\"nrOfStrings\">\r\n                  {this.state.nrOfIds + (this.state.nrOfIds > 1 ? 'st' : '')}\r\n                </span>\r\n              </label>\r\n              <TextareaAutosize\r\n                rows={2}\r\n                maxRows={20}\r\n                name=\"links\"\r\n                placeholder=\"Ex. https://cdon.se/kategori/produkt-titel-p00000000\"\r\n                className=\"form-control textarea-links mb-2\"\r\n                id=\"links\"\r\n                value={this.state.links}\r\n                onChange={this.inputHandler}\r\n                onKeyUp={this.inputHandler}\r\n              />\r\n              <label\r\n                htmlFor=\"importFile\"\r\n                href=\"#\"\r\n                className=\"btn btn-outline-success btn-sm\"\r\n              >\r\n                {this.state.showUploadSpinner ? (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                ) : null}{' '}\r\n                Upload excel file\r\n              </label>\r\n              <input\r\n                type=\"file\"\r\n                style={{ display: 'none' }}\r\n                name=\"importFile\"\r\n                id=\"importFile\"\r\n                onChange={this.handleFileChosen}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"output-ids\" className=\"font-weight-bold\">\r\n                Article number(s){' '}\r\n                <button\r\n                  href=\"/\"\r\n                  className=\"btn btn-outline-info btn-sm\"\r\n                  onClick={this.getExcel}\r\n                >\r\n                  Download excel\r\n                </button>\r\n              </label>\r\n              <TextareaAutosize\r\n                rows={2}\r\n                maxRows={20}\r\n                name=\"output-ids\"\r\n                id=\"output-ids\"\r\n                className=\"form-control\"\r\n                value={this.state.ids}\r\n                readOnly\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default artNrConv;\r\n","import React, { Component } from 'react';\r\nimport XLSX from 'xlsx';\r\n\r\nclass ExcelFile extends Component {\r\n\r\n    downloadFile = () => {\r\n        var filename = `delete${this.props.index}-${(new Date()).toLocaleString()}.xlsx`;\r\n        var data = [['ProductId']];\r\n        this.props.data.forEach(d => {\r\n            if(parseInt(d)) data.push([d]);\r\n        })\r\n        var ws_name = \"CDON Tools\";\r\n\r\n        var wb = XLSX.utils.book_new(), ws = XLSX.utils.aoa_to_sheet(data);\r\n        XLSX.utils.book_append_sheet(wb, ws, ws_name);\r\n\r\n        XLSX.writeFile(wb, filename);\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"excel\">\r\n                <button onClick={this.downloadFile}>\r\n                    <img src=\"https://www.freepngimg.com/thumb/microsoft/26716-4-excel-transparent.png\" alt=\"excel\"/>\r\n                    <p>{this.props.index + 1}</p>\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExcelFile;","import React, { Component } from 'react';\r\nimport TextareaAutosize from 'react-autosize-textarea';\r\nimport XLSX from 'xlsx';\r\n\r\nimport ExcelFile from './ExcelFile';\r\nimport './excel.sass';\r\n\r\nclass artNrConv extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ids: '',\r\n            nrOfIds: 0,\r\n            showUploadSpinner: false,\r\n            files: []\r\n        }\r\n        this.inputHandler = this.inputHandler.bind(this);\r\n    }\r\n    inputHandler(e) {\r\n        this.setState({[e.target.name]: e.target.value, nrOfIds: this.calcIds()});\r\n        this.generateExcelData();\r\n    }\r\n    calcIds = () => {\r\n        let splitText = this.state.ids.split(/\\r?\\n/);\r\n        let nrOfIds = 0;\r\n        splitText.forEach(element => {\r\n            nrOfIds++;\r\n        });\r\n        return nrOfIds;\r\n    }\r\n    handleFileChosen = e => {\r\n        this.setState({ showUploadSpinner: true });\r\n        var files = e.target.files, f = files[0];\r\n        var reader = new FileReader();\r\n        var str = '';\r\n        reader.onload = async (e) => {\r\n            var data = new Uint8Array(e.target.result);\r\n            var workbook = XLSX.read(data, { type: 'array' });\r\n            Object.keys(workbook.Sheets).forEach(sheet => {\r\n                Object.keys(workbook.Sheets[sheet]).forEach(async row => {\r\n                    //console.log(row, workbook.Sheets[sheet][row]);\r\n                    if (!row.includes('!')) {\r\n                        if (typeof workbook.Sheets[sheet][row].v == 'number' && !str.includes(workbook.Sheets[sheet][row].v) && workbook.Sheets[sheet][row].v.toString().length === 8) {\r\n                            str += `${workbook.Sheets[sheet][row].v} \\n`;\r\n                        }\r\n                    }\r\n                })\r\n            });\r\n            await this.setState({ids: str});\r\n            this.setState({ showUploadSpinner: false, nrOfIds: this.calcIds() });\r\n            this.generateExcelData()\r\n        };\r\n        reader.readAsArrayBuffer(f);\r\n    }\r\n\r\n    generateExcelData = () => {\r\n        var files = [];\r\n        for(var i = 1; i < Math.ceil(this.state.nrOfIds / 1000) + 1; i++){\r\n            files.push(this.state.ids.split(/\\r?\\n/).slice(1000 * (i-1), 1000*i));\r\n            this.setState({files});\r\n        }\r\n    }\r\n\r\n    getGeneratorData = () => {\r\n        this.setState({ids: this.props.ids});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container mt-4\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"ids\" className=\"font-weight-bold\">Ids <span className=\"badge badge-primary\" id=\"nrOfStrings\">{this.state.nrOfIds + (this.state.nrOfIds > 1 ? 'st' : '')}</span></label>\r\n                            <TextareaAutosize rows={2} maxRows={20} name=\"ids\" placeholder=\"Ex. xxxxxx\" className=\"form-control textarea-links mb-2\" id=\"ids\" value={this.state.ids} onChange={this.inputHandler}/>\r\n                            <label htmlFor=\"importFile\" href=\"#\" className=\"btn btn-outline-success btn-sm\">{this.state.showUploadSpinner ? (<span className=\"spinner-border spinner-border-sm\"></span>) : (null)} Upload excel file</label>\r\n                            <input type=\"file\" style={{ 'display': 'none' }} name=\"importFile\" id=\"importFile\" onChange={this.handleFileChosen} />\r\n                            <label className={`btn btn-outline-primary btn-sm ml-2 ${this.props.ids ? '' : 'disabled'}`} onClick={this.getGeneratorData}>Hämta data från generator</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.files.length > 0 ? (\r\n                    <div className=\"row mt-3\">\r\n                    <div className=\"col\">\r\n                        <h5>Excelfiler ({this.state.files.length}):</h5>\r\n                        <div className=\"excelfiles\">\r\n                            {this.state.files.map((file, index) => {\r\n                                return (<div className=\"excelContainer\"><ExcelFile data={file} index={index}/></div>)\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                ) : (null)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default artNrConv;","import xmlFormatter from 'xml-formatter';\r\n\r\nconst generateXML = (products = 1, prefix = 'Product', variations) => {\r\n  let xml = `<cdon_shopping_mall_import import_id=\"1\" source_id=\"1\" version=\"2.0\" import_previous_id=\"1\" import_type='FULL' xmlns=\"http://schemas.cdon.com/product/2.0/shopping-mall.xsd\" import_date=\"${new Date().toISOString()}\"><documents><products>`;\r\n  for (let i = 0; i < products; i++) {\r\n    xml += `<product id=\"${prefix.toLowerCase() +\r\n      '-' +\r\n      (i +\r\n        1)}\"><class id=\"Pens\" /><values><attribute id=\"title\"><value>${prefix +\r\n      ' ' +\r\n      (i + 1)}</value></attribute><attribute id=\"description\"><value>${prefix +\r\n      ' ' +\r\n      (i +\r\n        1)} description</value></attribute><attribute id=\"FrontImage\"><value>URL</value></attribute>`;\r\n    if (variations) {\r\n      xml += `<variations>${generateKeys()}</variations>`;\r\n    }\r\n    xml += `</values><productStatus>${generateProductStatuses()}</productStatus>`;\r\n    if (variations) {\r\n      xml += '<productVariations>';\r\n      for (let j = 0; j < products; j++) {\r\n        xml += `<sku id=\"${prefix.toLowerCase() +\r\n          '-' +\r\n          (i + 1) +\r\n          '-' +\r\n          'variation' +\r\n          '-' +\r\n          (j +\r\n            1)}\">${generateProductStatuses()}<variation key=\"CatalogColor\" value=\"Cool color\" /><variation key=\"CatalogSize\" value=\"Too big\" />${generateSalesChannel()}</sku>`;\r\n      }\r\n      xml += '</productVariations>';\r\n    } else {\r\n      xml += generateSalesChannel();\r\n    }\r\n    xml += '</product>';\r\n  }\r\n  xml += `</products></documents></cdon_shopping_mall_import>`;\r\n  return xmlFormatter(xml);\r\n};\r\n\r\nconst generateProductStatuses = () => {\r\n  return '<status>ONLINE</status><exposeStatus>BUYABLE</exposeStatus><inStock>9999</inStock>';\r\n};\r\n\r\nconst generateSalesChannel = () => {\r\n  const price = random(9999);\r\n  const salesPrice = random(price);\r\n  return `<salesChannels><channel iso=\"se\"><price current=\"${salesPrice}\" ordinary=\"${price}\" vat=\"25\" currency=\"SEK\"/><sellable>true</sellable><deliveryTime min=\"1\" max=\"3\"/><freightClass>${generateRandomFreightClass()}</freightClass></channel></salesChannels>`;\r\n};\r\n\r\nconst generateRandomFreightClass = () => {\r\n  const freightClasses = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'];\r\n  return freightClasses[Math.floor(Math.random() * freightClasses.length)];\r\n};\r\n\r\nconst random = max => {\r\n  return Math.floor(Math.random() * Math.floor(max));\r\n};\r\n\r\nconst generateKeys = () => {\r\n  return '<key attribute=\"CatalogColor\"><variation value=\"Cool color\" /></key><key attribute=\"CatalogSize\"><variation value=\"Too big\" /></key>';\r\n};\r\n\r\nconst addVariations = (products, use) => {\r\n  if (use) {\r\n    return;\r\n  }\r\n};\r\n\r\nexport default generateXML;\r\n","import React, { Component } from 'react';\r\nimport './v2productgenerator.sass';\r\nimport TextareaAutosize from 'react-autosize-textarea';\r\nimport generateXML from './generateXML';\r\n\r\nexport default class V2ProductGenerator extends Component {\r\n  state = {\r\n    products: 1,\r\n    prefix: undefined,\r\n    xml: '',\r\n    useVariations: false\r\n  };\r\n  generateXML = () => {\r\n    this.setState({\r\n      xml: generateXML(\r\n        this.state.products,\r\n        this.state.prefix !== '' ? this.state.prefix : undefined,\r\n        this.state.useVariations\r\n      )\r\n    });\r\n  };\r\n\r\n  generateFile = () => {\r\n    const data = new Blob([this.state.xml], { type: 'application/xml' });\r\n    const url = window.URL.createObjectURL(data);\r\n    const a = document.createElement('a');\r\n    document.body.append(a);\r\n    a.download = `cdontools-v2xml-${new Date().toLocaleString()}`;\r\n    a.href = url;\r\n    a.click();\r\n    a.remove();\r\n    window.URL.revokeObjectURL(url);\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container mt-4\">\r\n        <div className=\"row\">\r\n          <div className=\"col\"></div>\r\n          <div className=\"col\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"output-ids\" className=\"font-weight-bold\">\r\n                Number of products\r\n              </label>\r\n              <input\r\n                className=\"form-control mb-2\"\r\n                type=\"number\"\r\n                value={this.state.products}\r\n                name=\"products\"\r\n                onChange={this.handleChange}\r\n                min=\"1\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"output-ids\" className=\"font-weight-bold\">\r\n                Prefix\r\n              </label>\r\n              <input\r\n                className=\"form-control mb-2\"\r\n                value={this.state.prefix}\r\n                placeholder=\"Product\"\r\n                name=\"prefix\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <div className=\"custom-control custom-switch\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"custom-control-input\"\r\n                  id=\"include-variations\"\r\n                  checked={this.state.useVariations}\r\n                  onChange={() =>\r\n                    this.setState({ useVariations: !this.state.useVariations })\r\n                  }\r\n                />\r\n                <label\r\n                  className=\"custom-control-label\"\r\n                  for=\"include-variations\"\r\n                >\r\n                  Include variations\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                onClick={this.generateXML}\r\n              >\r\n                Generate XML\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col\"></div>\r\n        </div>\r\n        {this.state.xml !== '' && (\r\n          <div className=\"row mt-4 mb-4\">\r\n            <div className=\"col\">\r\n              <span className=\"font-weight-bold\">Output</span>\r\n              <button\r\n                className=\"btn btn-outline-success btn-sm ml-2\"\r\n                onClick={this.generateFile}\r\n              >\r\n                Download\r\n              </button>\r\n              <TextareaAutosize\r\n                className=\"form-control mt-4\"\r\n                value={this.state.xml}\r\n                name=\"xml\"\r\n                onChange={this.handleChange}\r\n                readOnly\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import xmlFormatter from 'xml-formatter';\r\n\r\nconst generateProduct = (products = 1, prefix = 'Product') => {\r\n  let xml = `<?xml version=\"1.0\" encoding=\"utf-8\"?><marketplace xmlns=\"https://schemas.cdon.com/product/4.0/4.8.0/product\">`;\r\n  for (let i = 0; i < products; i++) {\r\n    xml += `<product><identity><id>${prefix.toLowerCase() +\r\n      '-' +\r\n      (i + 1)}</id></identity><title><default>${prefix +\r\n      ' ' +\r\n      (i + 1)}</default></title><description><default>${prefix +\r\n      ' ' +\r\n      (i +\r\n        1)} description</default></description><category><puzzles_pegged_puzzles /></category></product>`;\r\n  }\r\n  xml += `</marketplace>`;\r\n  return xmlFormatter(xml);\r\n};\r\n\r\nconst generatePrice = (products = 1, prefix = 'Product') => {\r\n  const price = random(9999);\r\n  const salesPrice = random(price);\r\n  let xml = `<?xml version=\"1.0\" encoding=\"utf-8\"?><marketplace xmlns=\"https://schemas.cdon.com/product/4.0/4.8.0/price\">`;\r\n  for (let i = 0; i < products; i++) {\r\n    xml += `<product><id>${prefix.toLowerCase() +\r\n      '-' +\r\n      (i +\r\n        1)}</id><se><salePrice>${salesPrice}</salePrice><originalPrice>${price}</originalPrice><shippingCost>29.0</shippingCost><vat>25</vat></se></product>`;\r\n  }\r\n  xml += `</marketplace>`;\r\n  return xmlFormatter(xml);\r\n};\r\n\r\nconst generateAvailability = (products = 1, prefix = 'Product') => {\r\n  let xml = `<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n  <marketplace xmlns=\"https://schemas.cdon.com/product/4.0/4.8.0/availability\">`;\r\n  for (let i = 0; i < products; i++) {\r\n    xml += `<product><id>${prefix.toLowerCase() +\r\n      '-' +\r\n      (i +\r\n        1)}</id><stock>9999</stock><se><status>Online</status><deliveryTime><min>1</min><max>3</max></deliveryTime></se></product>`;\r\n  }\r\n  xml += `</marketplace>`;\r\n  return xmlFormatter(xml);\r\n};\r\n\r\nconst generateMedia = (products = 1, prefix = 'Product') => {\r\n  let xml = `<?xml version=\"1.0\" encoding=\"utf-8\"?><marketplace xmlns=\"https://schemas.cdon.com/product/4.0/4.8.0/media\">`;\r\n  for (let i = 0; i < products; i++) {\r\n    xml += `<product><id>${prefix.toLowerCase() +\r\n      '-' +\r\n      (i + 1)}</id><images><main>URL</main></images></product>`;\r\n  }\r\n  xml += `</marketplace>`;\r\n  return xmlFormatter(xml);\r\n};\r\n\r\nconst random = max => {\r\n  return Math.floor(Math.random() * Math.floor(max));\r\n};\r\n\r\nexport { generateProduct, generatePrice, generateAvailability, generateMedia };\r\n","import React, { Component } from 'react';\r\nimport TextareaAutosize from 'react-autosize-textarea';\r\nimport {\r\n  generateProduct,\r\n  generatePrice,\r\n  generateAvailability,\r\n  generateMedia\r\n} from './generateXML';\r\n\r\nexport default class V4ProductGenerator extends Component {\r\n  state = {\r\n    products: 1,\r\n    prefix: undefined,\r\n    productXML: '',\r\n    priceXML: '',\r\n    availabilityXML: '',\r\n    mediaXML: ''\r\n  };\r\n  generateXML = () => {\r\n    const prefix = this.state.prefix !== '' ? this.state.prefix : undefined;\r\n    this.setState({\r\n      productXML: generateProduct(this.state.products, prefix),\r\n      priceXML: generatePrice(this.state.products, prefix),\r\n      availabilityXML: generateAvailability(this.state.products, prefix),\r\n      mediaXML: generateMedia(this.state.products, prefix)\r\n    });\r\n  };\r\n\r\n  generateFile = () => {\r\n    const dataTypes = ['Product', 'Price', 'Availability', 'Media'];\r\n    dataTypes.forEach(type => {\r\n      const data = new Blob([this.state[type.toLowerCase() + 'XML']], {\r\n        type: 'application/xml'\r\n      });\r\n      const url = window.URL.createObjectURL(data);\r\n      const a = document.createElement('a');\r\n      document.body.append(a);\r\n      a.download = `cdontools-v4xml-${type}-${new Date().toLocaleString()}`;\r\n      a.href = url;\r\n      a.click();\r\n      a.remove();\r\n      window.URL.revokeObjectURL(url);\r\n    });\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container mt-4\">\r\n        <div className=\"row\">\r\n          <div className=\"col\"></div>\r\n          <div className=\"col\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"output-ids\" className=\"font-weight-bold\">\r\n                Number of products\r\n              </label>\r\n              <input\r\n                className=\"form-control mb-2\"\r\n                type=\"number\"\r\n                value={this.state.products}\r\n                name=\"products\"\r\n                onChange={this.handleChange}\r\n                min=\"1\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"output-ids\" className=\"font-weight-bold\">\r\n                Prefix\r\n              </label>\r\n              <input\r\n                className=\"form-control mb-2\"\r\n                value={this.state.prefix}\r\n                placeholder=\"Product\"\r\n                name=\"prefix\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                onClick={this.generateXML}\r\n              >\r\n                Generate XML\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col\"></div>\r\n        </div>\r\n        {this.state.productXML !== '' && (\r\n          <div className=\"row mt-4 mb-4\">\r\n            <div className=\"col\">\r\n              <div className=\"row\">\r\n                <span className=\"font-weight-bold\">Output</span>\r\n                <button\r\n                  className=\"btn btn-outline-success btn-sm ml-2\"\r\n                  onClick={this.generateFile}\r\n                >\r\n                  Download all\r\n                </button>\r\n              </div>\r\n              <div className=\"row  mt-4\">\r\n                <div className=\"col\">\r\n                  <p className=\"font-weight-bold\">Product</p>\r\n                  <TextareaAutosize\r\n                    className=\"form-control\"\r\n                    value={this.state.productXML}\r\n                    readOnly\r\n                  />\r\n                </div>\r\n                <div className=\"col\">\r\n                  <p className=\"font-weight-bold\">Price</p>\r\n                  <TextareaAutosize\r\n                    className=\"form-control\"\r\n                    value={this.state.priceXML}\r\n                    readOnly\r\n                  />\r\n                </div>\r\n                <div className=\"col\">\r\n                  <p className=\"font-weight-bold\">Availability</p>\r\n                  <TextareaAutosize\r\n                    className=\"form-control\"\r\n                    value={this.state.availabilityXML}\r\n                    readOnly\r\n                  />\r\n                </div>\r\n                <div className=\"col\">\r\n                  <p className=\"font-weight-bold\">Media</p>\r\n                  <TextareaAutosize\r\n                    className=\"form-control\"\r\n                    value={this.state.mediaXML}\r\n                    readOnly\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport Header from './components/header/Header';\r\nimport ArtNrConverter from './components/articleNrConverter/ArtNrConverter';\r\nimport Splits from './components/splits/Splits';\r\nimport V2ProductGenerator from './components/v2productgenerator/V2ProductGenerator';\r\nimport V4ProductGenerator from './components/v4productgenerator/V4ProductGenerator';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ids: ''\r\n    };\r\n  }\r\n  setIds = ids => {\r\n    this.setState({ ids });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/generator\"\r\n            render={() => (\r\n              <ArtNrConverter ids={this.state.ids} setIds={this.setIds} />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/split\"\r\n            component={() => (\r\n              <Splits ids={this.state.ids} setIds={this.setIds} />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/v2-product-generator\"\r\n            component={() => <V2ProductGenerator />}\r\n          />\r\n          <Route\r\n            path=\"/v4-product-generator\"\r\n            component={() => <V4ProductGenerator />}\r\n          />\r\n          <Redirect to=\"/generator\" />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport { HashRouter as Router } from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nrender((\r\n    <Router>\r\n        <App />\r\n    </Router>\r\n  ), document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}